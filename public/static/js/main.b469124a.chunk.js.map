{"version":3,"sources":["InvisibleCheckbox.js","App.js","serviceWorker.js","index.js"],"names":["InvisibleCheckbox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCompleteChange","bind","assertThisInitialized","e","onCompleteChange","react_default","a","createElement","Fragment","id","concat","row","col","className","type","name","checked","complete","onChange","htmlFor","Component","App","handleChange","target","val","value","state","charactername","startsWith","match","characters","parseInt","matches","field","i","checks","starRow","j","stars","length","circles","sidequests","maps","talents","keywords","localStorage","setItem","JSON","stringify","setState","backup","parse","getItem","_this2","src","alt","disabled","map","n","key","InvisibleCheckbox_InvisibleCheckbox","React","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b469124a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class InvisibleCheckbox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCompleteChange = this.handleCompleteChange.bind(this);\r\n    }\r\n\r\n    handleCompleteChange(e) {\r\n        this.props.onCompleteChange(e);\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div id={`c${this.props.row-1}-${this.props.col}-w`}\r\n                className={`checkbox check-transparent cc${this.props.col} cr${this.props.row}`}>\r\n                <input type=\"checkbox\" id={`c${this.props.row-1}-${this.props.col}`}\r\n                    name={`c${this.props.row-1}-${this.props.col}`}\r\n                    checked={this.props.complete}\r\n                    onChange={this.handleCompleteChange} />\r\n                <label htmlFor={`c${this.props.row-1}-${this.props.col}`}></label>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport InvisibleCheckbox from './InvisibleCheckbox';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    var backup = JSON.parse(localStorage.getItem(\"data\"));\n    this.state = backup || {\n      charactername: '',\n      checks: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      stars: [true, false, false, false, false, false, false, false, false, false],\n      circles: [false, false, false, false, false, false, false, false, false, false],\n      characters: ['', '', '', '', '', '', '', '', '', ''],\n      sidequests: ['', '', '', '', '', '', '', '', '', '', '', ''],\n      maps: ['', '', '', '', '', '', '', '', '', ''],\n      talents: ['', '', '', '', '', '', '', '', ''],\n      keywords: ['', '', '', '', '', '']\n    }\n  }\n\n  handleChange = (e) => {\n    let id = e.target.id;\n    let val = e.target.value;\n    let state = this.state;\n\n    if (id === 'charactername') {\n      state.charactername = val;\n    }\n    else if (id.startsWith('character')) {\n      var row = id.match(/character(\\d+)/)[1];\n      state.characters[parseInt(row)] = val;\n    }\n    else if (id.startsWith('c')) {\n      var matches = id.match(/c(\\d+)-(\\d+)/);\n      let row = parseInt(matches[1]);\n      let field = parseInt(matches[2]);\n\n      if (field === 1 || field === 2 || field === 3) {\n        if (e.target.checked) {\n          for (let i = 0; i < 3 * row + field; i++) {\n            state.checks[i] = true;\n          }\n          let starRow = row + (field === 3 ? 1 : 0) + 1;\n          for (let j = 0; j < starRow; j++) {\n            state.stars[j] = true;\n          }\n        }\n        else {\n          for (let i = 3 * row + field - 1; i < state.checks.length; i++) {\n            state.checks[i] = false;\n          }\n          for (let j = row + 1; j < state.stars.length; j++) {\n            state.stars[j] = false;\n          }\n        }\n      }\n      else if (field === 4) {\n        state.circles[parseInt(row)] = e.target.checked;\n      }\n      else if (field === 5) {\n        state.stars[parseInt(row)] = e.target.checked;\n      }\n    }\n    else if (id.startsWith('sq')) {\n      let row = id.match(/sq(\\d+)/)[1];\n      state.sidequests[parseInt(row)] = val;\n    }\n    else if (id.startsWith('m')) {\n      let row = id.match(/m(\\d+)/)[1];\n      state.maps[parseInt(row)] = val;\n    }\n    else if (id.startsWith('t')) {\n      let row = id.match(/t(\\d+)/)[1];\n      state.talents[parseInt(row)] = val;\n    }\n    else if (id.startsWith('key')) {\n      let row = id.match(/key(\\d+)/)[1];\n      state.keywords[parseInt(row)] = val;\n    }\n    else {\n      state[id] = val;\n    }\n\n    localStorage.setItem(\"data\", JSON.stringify(state));\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <img id=\"bg\" src=\"both.png\" alt=\"card\" />\n        <form id=\"overlay\">\n          <div id=\"name\">\n            <input type=\"text\" id=\"charactername\" name=\"charactername\"\n              value={this.state.charactername}\n              onChange={this.handleChange} />\n          </div>\n          <div id=\"campaign\">\n            <div id=\"c0-4-w\" className=\"checkbox check-circle cc4 cr0\">\n              <input type=\"checkbox\" id=\"c0-4\" name=\"c0-4\"\n                checked={this.state.circles[0]}\n                onChange={this.handleChange} />\n              <label htmlFor=\"c0-4\"></label>\n            </div>\n            <div id=\"c0-5-w\" className=\"checkbox check-star cc5 cr0\">\n              <input type=\"checkbox\" id=\"c0-5\" name=\"c0-5\" checked disabled />\n              <label htmlFor=\"c0-5\"></label>\n            </div>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((n) =>\n              <React.Fragment key={`row${n}`}>\n                <InvisibleCheckbox row={n} col={1}\n                  complete={this.state.checks[(n - 1) * 3]}\n                  onCompleteChange={this.handleChange}></InvisibleCheckbox>\n                <InvisibleCheckbox row={n} col={2}\n                  complete={this.state.checks[(n - 1) * 3 + 1]}\n                  onCompleteChange={this.handleChange}></InvisibleCheckbox>\n                <InvisibleCheckbox row={n} col={3}\n                  complete={this.state.checks[(n - 1) * 3 + 2]}\n                  onCompleteChange={this.handleChange}></InvisibleCheckbox>\n                <div id={`c${n}-4-w`} className={`checkbox check-circle cc4 cr${n}`}>\n                  <input type=\"checkbox\" id={`c${n}-4`} name={`c${n}-4`}\n                    checked={this.state.circles[n]}\n                    onChange={this.handleChange} />\n                  <label htmlFor={`c${n}-4`}></label>\n                </div>\n                <div id={`c${n}-5-w`} className={`checkbox check-star cc5 cr${n}`}>\n                  <input type=\"checkbox\" id={`c${n}-5`} name={`c${n}-5`}\n                    checked={this.state.stars[n]}\n                    onChange={this.handleChange} />\n                  <label htmlFor={`c${n}-5`}></label>\n                </div>\n                <input type=\"text\" id={`character${n - 1}`} name={`character${n - 1}`} className={`cc6 ccr${n} character`}\n                  value={this.state.characters[n - 1]}\n                  onChange={this.handleChange} />\n              </React.Fragment>\n            )}\n            <InvisibleCheckbox row={10} col={1}\n              complete={this.state.checks[27]}\n              onCompleteChange={this.handleChange}></InvisibleCheckbox>\n            <InvisibleCheckbox row={10} col={2}\n              complete={this.state.checks[28]}\n              onCompleteChange={this.handleChange}></InvisibleCheckbox>\n            <InvisibleCheckbox row={10} col={3}\n              complete={this.state.checks[29]}\n              onCompleteChange={this.handleChange}></InvisibleCheckbox>\n            <input type=\"text\" id=\"character9\" name=\"character9\" className=\"cc6 ccr10 character\"\n              value={this.state.characters[9]}\n              onChange={this.handleChange} />\n          </div>\n          <div id=\"sidequests\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((n) =>\n              <input type=\"text\" id={`sq${n - 1}`} name={`sq${n - 1}`} key={`sq${n - 1}`}\n                className={`sq sqr${n % 2 === 0 ? 1 : 2} sqc${n}`}\n                value={this.state.sidequests[n - 1]}\n                onChange={this.handleChange} />\n            )}\n          </div>\n          <div id=\"maps\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((n) =>\n              <input type=\"text\" id={`m${n - 1}`} name={`m${n - 1}`} key={`m${n - 1}`}\n                className={`map map${n}`}\n                value={this.state.maps[n - 1]}\n                onChange={this.handleChange} />\n            )}\n          </div>\n          <div id=\"talents\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((n) =>\n              <input type=\"text\" id={`t${n - 1}`} name={`t${n - 1}`} key={`t${n - 1}`}\n                className={`tal tal${n}`}\n                value={this.state.talents[n - 1]}\n                onChange={this.handleChange} />\n            )}\n          </div>\n          <div id=\"keywords\">\n            {[1, 2, 3, 4, 5, 6].map((n) =>\n              <input type=\"text\" id={`key${n - 1}`} name={`key${n - 1}`} key={`key${n - 1}`}\n                className={`key key${n}`}\n                value={this.state.keywords[n - 1]}\n                onChange={this.handleChange} />\n            )}\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('wrapper'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}